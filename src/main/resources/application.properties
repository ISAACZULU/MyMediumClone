# Server Configuration
server.port=8080

# Database Configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/mediumclone
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=${POSTGRES_PASSWORD:postgres}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# PostgreSQL specific settings
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JWT Configuration (Use environment variables in production)
jwt.secret=${JWT_SECRET:your-secret-key-here-make-it-long-and-secure-32-chars}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.org.example=DEBUG

# Jackson Configuration
spring.jackson.default-property-inclusion=non_null

# Media Management Configuration
app.media.upload.path=./uploads
app.media.max-file-size=10485760
app.media.allowed-image-types=jpg,jpeg,png,gif,webp
app.media.compression.quality=0.8
app.media.compression.max-width=1920
app.media.compression.max-height=1080
app.media.thumbnail.width=300
app.media.thumbnail.height=200

# CDN Configuration (use environment variables in production)
app.cdn.base-url=${CDN_BASE_URL:https://cdn.yourdomain.com}
app.cdn.enabled=${CDN_ENABLED:false}
app.cdn.provider=${CDN_PROVIDER:local}
app.cdn.region=${CDN_REGION:us-east-1}
app.cdn.bucket=${CDN_BUCKET:your-media-bucket}
app.cdn.access-key=dummy
app.cdn.secret-key=dummy

# Cloudinary Configuration (use environment variables in production)
app.cloudinary.cloud-name=dummy
app.cloudinary.api-key=dummy
app.cloudinary.api-secret=dummy
app.cloudinary.folder=medium-clone
app.cloudinary.auto-optimize=true

# CDN Provider Examples:
# AWS CloudFront: app.cdn.provider=cloudfront, app.cdn.base-url=https://d1234.cloudfront.net
# Cloudinary: app.cdn.provider=cloudinary, app.cdn.base-url=https://res.cloudinary.com/your-cloud-name
# Imgix: app.cdn.provider=imgix, app.cdn.base-url=https://your-subdomain.imgix.net

# Rate Limiting Configuration
app.rate-limit.enabled=true
app.rate-limit.default-limit=100
app.rate-limit.default-window=3600
app.rate-limit.auth-limit=10
app.rate-limit.auth-window=3600

# Pagination Configuration
app.pagination.default-size=20
app.pagination.max-size=100

# API Documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Cache Configuration
spring.cache.type=caffeine
spring.cache.cache-names=articles,users,tags,search
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=300s

# Logging for new features
logging.level.org.example.media=DEBUG
logging.level.org.example.search=DEBUG
logging.level.org.example.ratelimit=DEBUG

# Backup Configuration (use environment variables in production)
app.backup.database.url=${BACKUP_DATABASE_URL:jdbc:postgresql://localhost:5432/mediumclone}
app.backup.database.username=${BACKUP_DATABASE_USERNAME:postgres}
app.backup.database.password=${BACKUP_DATABASE_PASSWORD:${POSTGRES_PASSWORD:postgres}}
app.backup.storage.path=./backups
app.backup.retention.days=30

# Scheduled Tasks Configuration
app.scheduling.enabled=true
app.scheduling.thread-pool-size=10
app.scheduling.email-digest.enabled=true
app.scheduling.content-cleanup.enabled=true
app.scheduling.backup.enabled=true

# Java Home (for reference or tooling)
# { "java.home": "C:\\Program Files\\Java\\jdk-17" }

# If you want to use this as a property in your app, uncomment the next line:
# java.home=C:\Program Files\Java\jdk-17 